---
http_interactions:
- request:
    method: get
    uri: https://api.reliefweb.int/v1/disasters/45829?appname=givealittle&fields%5Bexclude%5D%5B0%5D=country&fields%5Binclude%5D%5B0%5D=primary_country&fields%5Binclude%5D%5B1%5D=primary_type&fields%5Binclude%5D%5B2%5D=description-html&preset=latest&primary_type&profile=list
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.2
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Wed, 06 Jun 2018 03:16:48 GMT
      Content-Type:
      - application/json
      Vary:
      - Accept-Encoding, Accept-Encoding
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, OPTIONS, POST
      Access-Control-Allow-Headers:
      - User-Agent, Content-Type
      Cache-Control:
      - public, max-age=300
      Last-Modified:
      - Tue, 29 May 2018 16:07:17 GMT
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Options:
      - nosniff
      X-Varnish-Ttl:
      - '300.000'
      X-Varnish:
      - 31515987 31632457
      Age:
      - '4'
      Via:
      - 1.1 varnish-v4
      X-Varnish-Server:
      - rwint-api-varnish
      Accept-Ranges:
      - bytes
      Content-Length:
      - '1709'
      Set-Cookie:
      - __bm-hap_hKBcutrqRn9rEZDW=S1; path=/; HttpOnly; Secure
    body:
      encoding: ASCII-8BIT
      string: '{"href":"https:\/\/api.reliefweb.int\/v1\/disasters\/45829?appname=givealittle&fields%5Bexclude%5D%5B%5D=country&fields%5Binclude%5D%5B%5D=primary_country&fields%5Binclude%5D%5B%5D=primary_type&fields%5Binclude%5D%5B%5D=description-html&preset=latest&primary_type&profile=list","time":4,"links":{"self":{"href":"https:\/\/api.reliefweb.int\/v1\/disasters\/45829"},"collection":{"href":"https:\/\/api.reliefweb.int\/v1\/disasters"}},"totalCount":1,"count":1,"data":[{"fields":{"date":{"created":"2018-05-23T00:00:00+00:00"},"primary_type":{"code":"TC","name":"Tropical
        Cyclone","id":4618},"primary_country":{"href":"https:\/\/api.reliefweb.int\/v1\/countries\/255","name":"Yemen","location":{"lon":47.62,"lat":15.94},"id":255,"iso3":"yem"},"description-html":"<p>A
        new tropical storm has developed in the southwest Arabian Sea where it intensified
        yesterday evening into Cyclone Mekunu. The cyclone is moving currently north-northwest
        at a speed of 11 km\/h. Mekunu is expected to continue moving in this direction
        during the remainder of this week and make landfall near Salalah, Oman on
        about Saturday 26 May. A major fluctuation in tropical weather over the southern
        Arabian Sea known as the Madden-Julian oscillation (MJO) is likely to cause
        Mekunu to strengthen further. As a result, heavy rains are forecasted for
        Socotra Island, followed by the southern Arabian coast from Sayhut in eastern
        Yemen to Salalah and Ash Shuwaymiyyah in southern Oman, which could cause
        local flooding and damage. (<a href=\"https:\/\/reliefweb.int\/node\/2617934\">FAO,
        23 May 2018<\/a>)<\/p>\n\n<p>The impact of cyclone \u2018Mekunu\u2019 on Yemen\u2019s
        eastern mainland, after it had made landfall in the Sultanate of Oman on 26
        May, has been limited. Minor damage has been reported to infrastructure in
        the districts of Hawf and Shahan of Al Maharah Governorate. Two ships reportedly
        sank in Al Gaydah and the cycolone damaged agricultural equipment. Meanwhile,
        assessments and relief efforts continue on the island of Socotra. On 27 May,
        [IFRC] <a href=\"https:\/\/reliefweb.int\/node\/2623699\">reported<\/a> that
        seven people have died and eight are still missing due to the cyclone...Local
        authorities and the Displacement Tracking Team led by the International Organization
        for Migration (DTM\/IOM) have reported a total of 507 families being displaced
        in Hadibo and Qalansiyah. Communities living in Badahola have evacuated their
        areas as reportedly they have been surrounded by flood water. The majority
        of the affected population (90 per cent) are hosted in schools, with the rest
        staying in other government buildings...An inter-cluster assessment team is
        expected to travel to Socotra on 29 May with the support of UNHAS. (<a href=\"https:\/\/reliefweb.int\/node\/2624009\">OCHA,
        28 May 2018<\/a>)<\/p>\n\n<h3>Useful Links<\/h3>\n\n<ul>\n<li><a href=\"http:\/\/www.rsmcnewdelhi.imd.gov.in\/index.php?lang=en\">Regional
        Specialized Meteorological Centre for Tropical Cyclones over North Indian
        Ocean<\/a><\/li>\n<li><a href=\"http:\/\/www.met.gov.om\/opencms\/export\/sites\/default\/dgman\/en\/home\/\">Oman
        Directorate General of Meteorology<\/a><\/li>\n<\/ul>\n","name":"Tropical
        Cyclone Mekunu - May 2018","glide":"TC-2018-000062-YEM","type":[{"name":"Tropical
        Cyclone"}],"url":"https:\/\/reliefweb.int\/taxonomy\/term\/45829","status":"current"},"id":"45829"}]}'
    http_version: 
  recorded_at: Wed, 06 Jun 2018 03:16:52 GMT
- request:
    method: get
    uri: https://api.data.charitynavigator.org/v2/Organizations?app_id=b5eb5dce&app_key=50a9c4458c9350f6d287eb3ab633912e&pageSize=15&rated=true&search
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.2
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - openresty/1.11.2.2
      Date:
      - Wed, 06 Jun 2018 03:16:53 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '42855'
      Connection:
      - keep-alive
      X-Powered-By:
      - Express
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Expose-Headers:
      - CN_Result_Count, objectCount
      Cn-Result-Count:
      - '8632'
      Objectcount:
      - '8632'
      Etag:
      - W/"a767-8y59XDTib9lLwEG3oX5cK+Hzivo"
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 06 Jun 2018 03:16:53 GMT
recorded_with: VCR 4.0.0
